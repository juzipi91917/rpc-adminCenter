// Code generated by goctl. DO NOT EDIT.
// Source: admin.proto

package server

import (
	"context"

	"codeup.aliyun.com/64df1ec7dba61e96ebf612bf/jiandaoshou/rpc-adminCenter/internal/logic/permissionservice"
	"codeup.aliyun.com/64df1ec7dba61e96ebf612bf/jiandaoshou/rpc-adminCenter/internal/svc"
	"codeup.aliyun.com/64df1ec7dba61e96ebf612bf/jiandaoshou/rpc-adminCenter/pb/admin"
)

type PermissionServiceServer struct {
	svcCtx *svc.ServiceContext
	admin.UnimplementedPermissionServiceServer
}

func NewPermissionServiceServer(svcCtx *svc.ServiceContext) *PermissionServiceServer {
	return &PermissionServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *PermissionServiceServer) AddMenu(ctx context.Context, in *admin.AddMenuRequest) (*admin.AddMenuResponse, error) {
	l := permissionservicelogic.NewAddMenuLogic(ctx, s.svcCtx)
	return l.AddMenu(in)
}

func (s *PermissionServiceServer) UpdateMenu(ctx context.Context, in *admin.UpdateMenuRequest) (*admin.UpdateMenuResponse, error) {
	l := permissionservicelogic.NewUpdateMenuLogic(ctx, s.svcCtx)
	return l.UpdateMenu(in)
}

func (s *PermissionServiceServer) GetMenuList(ctx context.Context, in *admin.GetMenuListRequest) (*admin.GetMenuListResponse, error) {
	l := permissionservicelogic.NewGetMenuListLogic(ctx, s.svcCtx)
	return l.GetMenuList(in)
}

func (s *PermissionServiceServer) AddPermission(ctx context.Context, in *admin.AddPermissionRequest) (*admin.AddPermissionResponse, error) {
	l := permissionservicelogic.NewAddPermissionLogic(ctx, s.svcCtx)
	return l.AddPermission(in)
}

func (s *PermissionServiceServer) UpdatePermission(ctx context.Context, in *admin.UpdatePermissionRequest) (*admin.UpdatePermissionResponse, error) {
	l := permissionservicelogic.NewUpdatePermissionLogic(ctx, s.svcCtx)
	return l.UpdatePermission(in)
}

func (s *PermissionServiceServer) GetPermissionList(ctx context.Context, in *admin.GetPermissionListRequest) (*admin.GetPermissionListResponse, error) {
	l := permissionservicelogic.NewGetPermissionListLogic(ctx, s.svcCtx)
	return l.GetPermissionList(in)
}

func (s *PermissionServiceServer) AddRole(ctx context.Context, in *admin.AddRoleRequest) (*admin.AddRoleResponse, error) {
	l := permissionservicelogic.NewAddRoleLogic(ctx, s.svcCtx)
	return l.AddRole(in)
}

func (s *PermissionServiceServer) UpdateRole(ctx context.Context, in *admin.UpdateRoleRequest) (*admin.UpdateRoleResponse, error) {
	l := permissionservicelogic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

func (s *PermissionServiceServer) GetRoleList(ctx context.Context, in *admin.GetRoleListRequest) (*admin.GetRoleListResponse, error) {
	l := permissionservicelogic.NewGetRoleListLogic(ctx, s.svcCtx)
	return l.GetRoleList(in)
}

func (s *PermissionServiceServer) AddAdmin(ctx context.Context, in *admin.AddAdminRequest) (*admin.AddAdminResponse, error) {
	l := permissionservicelogic.NewAddAdminLogic(ctx, s.svcCtx)
	return l.AddAdmin(in)
}

func (s *PermissionServiceServer) UpdateAdmin(ctx context.Context, in *admin.UpdateAdminRequest) (*admin.UpdateAdminResponse, error) {
	l := permissionservicelogic.NewUpdateAdminLogic(ctx, s.svcCtx)
	return l.UpdateAdmin(in)
}

func (s *PermissionServiceServer) GetAdminList(ctx context.Context, in *admin.GetAdminListRequest) (*admin.GetAdminListResponse, error) {
	l := permissionservicelogic.NewGetAdminListLogic(ctx, s.svcCtx)
	return l.GetAdminList(in)
}

func (s *PermissionServiceServer) ChangeAdminState(ctx context.Context, in *admin.ChangeAdminStateRequest) (*admin.ChangeAdminStateResponse, error) {
	l := permissionservicelogic.NewChangeAdminStateLogic(ctx, s.svcCtx)
	return l.ChangeAdminState(in)
}

func (s *PermissionServiceServer) GetAdminRoleList(ctx context.Context, in *admin.GetAdminRoleListRequest) (*admin.GetAdminRoleListResponse, error) {
	l := permissionservicelogic.NewGetAdminRoleListLogic(ctx, s.svcCtx)
	return l.GetAdminRoleList(in)
}

func (s *PermissionServiceServer) GetRolePermissionList(ctx context.Context, in *admin.GetRolePermissionListRequest) (*admin.GetRolePermissionListResponse, error) {
	l := permissionservicelogic.NewGetRolePermissionListLogic(ctx, s.svcCtx)
	return l.GetRolePermissionList(in)
}

func (s *PermissionServiceServer) BindAdminRole(ctx context.Context, in *admin.BindAdminRoleRequest) (*admin.BindAdminRoleResponse, error) {
	l := permissionservicelogic.NewBindAdminRoleLogic(ctx, s.svcCtx)
	return l.BindAdminRole(in)
}

func (s *PermissionServiceServer) BindRolePermission(ctx context.Context, in *admin.BindRolePermissionRequest) (*admin.BindRolePermissionResponse, error) {
	l := permissionservicelogic.NewBindRolePermissionLogic(ctx, s.svcCtx)
	return l.BindRolePermission(in)
}

func (s *PermissionServiceServer) DelAdminRole(ctx context.Context, in *admin.DelAdminRoleRequest) (*admin.DelAdminRoleResponse, error) {
	l := permissionservicelogic.NewDelAdminRoleLogic(ctx, s.svcCtx)
	return l.DelAdminRole(in)
}

func (s *PermissionServiceServer) DelRolePermission(ctx context.Context, in *admin.DelRolePermissionRequest) (*admin.DelRolePermissionResponse, error) {
	l := permissionservicelogic.NewDelRolePermissionLogic(ctx, s.svcCtx)
	return l.DelRolePermission(in)
}
